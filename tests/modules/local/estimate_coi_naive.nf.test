nextflow_process {

    name "Test Process ESTIMATE_COI_NAIVE"
    script "modules/local/estimate_coi_naive.nf"
    process "ESTIMATE_COI_NAIVE"

    test("Estimating coi with integer method should run without failures") {

        when {
            process {
                """
                input[0] = file("${projectDir}/tests/input/example_allele_table.tsv")
                input[1] = "integer_method"
                input[2] = 1
                """
            }
        }

        then {
            assert process.success
            // channel exists
            assert process.out.coi_table != null
            // output md5 check
            assert path(process.out.coi_table.get(0)).md5 == "7a5988a84065e6293917af6f99a6d0f5"
        }

    }
    test("Estimating coi with quantile method should run without failures") {

        when {
            process {
                """
                input[0] = file("${projectDir}/tests/input/example_allele_table.tsv")
                input[1] = "quantile_method"
                input[2] = 0.1
                """
            }
        }

        then {
            assert process.success
            // channel exists
            assert process.out.coi_table != null
            // output md5 check
            assert path(process.out.coi_table.get(0)).md5 == "a1dd88ea0344a633185c1d8f0a304443"
        }

    }
    test("Estimating coi with large allele table with integer method should run without failures") {

        when {
            process {
                """
                input[0] = file("${projectDir}/tests/input/example2_allele_table.tsv")
                input[1] = "integer_method"
                input[2] = 1
                """
            }
        }

        then {
            assert process.success
            // channel exists
            assert process.out.coi_table != null
            // output md5 check
            assert path(process.out.coi_table.get(0)).md5 == "28e2daaa106dffbdce6f5ddca80fef8e"
        }

    }
    test("Estimating coi with large allele table with quantile method should run without failures") {

        when {
            process {
                """
                input[0] = file("${projectDir}/tests/input/example2_allele_table.tsv")
                input[1] = "quantile_method"
                input[2] = 0.1
                """
            }
        }

        then {
            assert process.success
            // channel exists
            assert process.out.coi_table != null
            // output md5 check
            assert path(process.out.coi_table.get(0)).md5 == "4a7870aabe8c3d3d62d57a8ebad66e08"
        }

    }

    test("Estimating coi with large allele table with quantile method with inappropriate") {

        when {
            process {
                """
                input[0] = file("${projectDir}/tests/input/example2_allele_table.tsv")
                input[1] = "quantile_method"
                input[2] = -0.2
                """
            }
        }

        then {
            // assert that it failed
            assert !process.success
        }
    }
}

// TODO: Test integer method fails with 0.1, -1, and 0
// TODO: Test quantile method fails with 0, 1, -0.2
